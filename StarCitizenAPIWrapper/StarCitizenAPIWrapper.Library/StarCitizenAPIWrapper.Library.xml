<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StarCitizenAPIWrapper.Library</name>
    </assembly>
    <members>
        <member name="T:StarCitizenAPIWrapper.Library.ShipRequest">
            <summary>
            A complete request for the api about specific ships.
            </summary>
        </member>
        <member name="P:StarCitizenAPIWrapper.Library.ShipRequest.RequestParameters">
            <summary>
            Array of parameters for the api request.
            </summary>
        </member>
        <member name="T:StarCitizenAPIWrapper.Library.ShipRequestBuilder">
            <summary>
            A builder class to help creating a request for specific ships.
            </summary>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.ShipRequestBuilder.AddClassification(System.String)">
            <summary>
            Adds the specified classification to the request.
            </summary>
            <param name="classification">The classification to be added.</param>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.ShipRequestBuilder.WithName(System.String)">
            <summary>
            Sets the name of the ships to search.
            </summary>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.ShipRequestBuilder.WithLengthMin(System.Int32)">
            <summary>
            Sets the minimal length of the ships to search.
            </summary>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.ShipRequestBuilder.WithLengthMax(System.Int32)">
            <summary>
            Sets the maximal length of the ships to search.
            </summary>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.ShipRequestBuilder.WithCrewMin(System.Int32)">
            <summary>
            Sets the minimal amount of crew members of the ships to search.
            </summary>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.ShipRequestBuilder.WithCrewMax(System.Int32)">
            <summary>
            Sets the maximal amount of crew members of the ships to search.
            </summary>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.ShipRequestBuilder.WithPriceMin(System.Int32)">
            <summary>
            Sets the minimal price of the ships to search.
            </summary>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.ShipRequestBuilder.WithPriceMax(System.Int32)">
            <summary>
            Sets the maximal price of the ships to search.
            </summary>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.ShipRequestBuilder.WithMassMin(System.Int32)">
            <summary>
            Sets the minimal mass of the ships to search.
            </summary>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.ShipRequestBuilder.WithMassMax(System.Int32)">
            <summary>
            Sets the maximal mass of the ships to search.
            </summary>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.ShipRequestBuilder.WithPageMax(System.Int32)">
            <summary>
            Sets the maximal pages on the RSI website of the ships to search with the specified parameters.
            <remarks>
            Careful that per page it takes around 15 seconds to process those results.
            </remarks>
            </summary>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.ShipRequestBuilder.WithId(System.Int32)">
            <summary>
            Sets the id of the ship to search
            <remarks>
            This works only with the cached database
            because its the id of the API database.
            </remarks>
            </summary>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.ShipRequestBuilder.Build">
            <summary>
            Builds the configured request for the api.
            </summary>
            <returns></returns>
        </member>
        <member name="T:StarCitizenAPIWrapper.Library.StarCitizenClient">
            <summary>
            Client to connect to the Star Citizen API.
            </summary>
        </member>
        <member name="F:StarCitizenAPIWrapper.Library.StarCitizenClient._currentClient">
            <summary>
            The current <see cref="T:StarCitizenAPIWrapper.Library.StarCitizenClient"/> instance.
            </summary>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.StarCitizenClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:StarCitizenAPIWrapper.Library.StarCitizenClient"/>.
            </summary>
            <param name="apiKey"></param>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.StarCitizenClient.GetClient(System.String)">
            <summary>
            Gives the current <see cref="T:StarCitizenAPIWrapper.Library.StarCitizenClient"/>.
            Creates one if there isn't a current instance.
            </summary>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.StarCitizenClient.GetUser(System.String)">
            <summary>
            Sends an API request for user information.
            </summary>
            <param name="handle">The handle of the requested user.</param>
            <returns>An instance of <see cref="T:StarCitizenAPIWrapper.Models.User.IUser"/> containing the information about the requested user.</returns>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.StarCitizenClient.GetOrganization(System.String)">
            <summary>
            Sends an API request for organization information.
            </summary>
            <param name="sid">The SID of the organization</param>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.StarCitizenClient.GetOrganizationMembers(System.String)">
            <summary>
            Sends an API request for members of an organization.
            </summary>
            <param name="sid">The SID of the organization.</param>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.StarCitizenClient.GetVersions">
            <summary>
            Sends an API request for current existing versions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.StarCitizenClient.GetShips(StarCitizenAPIWrapper.Library.ShipRequest)">
            <summary>
            Sends an API request for the ships within the specified parameters.
            </summary>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.StarCitizenClient.ParseUserProfile(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Parses the given profile json into a <see cref="T:StarCitizenAPIWrapper.Models.User.IUserProfile"/>.
            </summary>
            <param name="profileData">The <see cref="T:Newtonsoft.Json.Linq.JToken"/> containing the profile information.</param>
            <returns>A new instance of <see cref="T:StarCitizenAPIWrapper.Models.User.IUserProfile"/> containing the parsed information.</returns>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.StarCitizenClient.ParseUserOrganizationInfo(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Parses the given organization information of a user into a <see cref="T:StarCitizenAPIWrapper.Models.User.IUserOrganizationInfo"/>.
            </summary>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.StarCitizenClient.ParseShipMedia(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Parses the given media information into a <see cref="T:StarCitizenAPIWrapper.Models.Ships.Media.ApiMedia"/>.
            </summary>
        </member>
        <member name="M:StarCitizenAPIWrapper.Library.StarCitizenClient.ParseShipMediaImage(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Parses the given media image information into a <see cref="T:StarCitizenAPIWrapper.Models.Ships.Media.ShipMediaImage"/>.
            </summary>
        </member>
    </members>
</doc>
